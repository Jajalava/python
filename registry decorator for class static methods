# creates decorator, which appends function to class attribute-storage.
# module with stored functions can be used as a collection of game effects 
# that can be imported to game and applied to hero.

def register(storage = None):
    def wrapper(func):
        if storage is not None: 
            print('appending: %-30s in %s' %(func, storage))
            storage.append(func)
        return func
    return wrapper


class Effects:
    registry = []
    
    @staticmethod
    @register(registry)
    def curse(value):
        print('Decreasing endurance by %d' % value)  
    
    @staticmethod
    @register(registry)
    def blessing(value):
        print('Increasing stats by %.2f' % value)
   
    @staticmethod
    @register(registry)
    def evil_eye():
        print('Watch out!')

if __name__ == '__main__':
    funcs = Effects.registry
    funcs[0](5); funcs[1](1/3); funcs[2]()
    
    print('\n','*'*40, '\n', sep = '')
    for func in funcs:
        print(func.__name__)
